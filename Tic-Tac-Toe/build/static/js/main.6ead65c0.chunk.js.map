{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","Header.js","ContactForm.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","ContactForm","useState","name","email","subject","message","state","setState","result","setResult","onInputChange","event","target","value","className","success","onSubmit","preventDefault","axios","post","response","data","catch","Form","Group","controlId","Label","Control","type","placeholder","onChange","as","rows","Button","variant","Applikacija","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAAe,I,YCwBAA,ICZAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCECQ,EANA,kBACX,iCACI,iD,iDCgGOC,EAjGK,WAAO,IAAD,EACEC,mBAAS,CACjCC,KAAM,GACNC,MAAO,GACPC,QAAS,GACTC,QAAS,KALa,mBACjBC,EADiB,KACVC,EADU,OAQIN,mBAAS,MARb,mBAQjBO,EARiB,KAQTC,EARS,KA+BlBC,EAAgB,SAAAC,GAAU,IAAD,EACLA,EAAMC,OAAtBV,EADqB,EACrBA,KAAMW,EADe,EACfA,MAEdN,EAAS,2BACJD,GADG,kBAELJ,EAAOW,MAIZ,OACE,gCACGL,GACC,mBAAGM,UAAS,UAAKN,EAAOO,QAAU,UAAY,SAA9C,SACGP,EAAOH,UAGZ,uBAAMW,SArCQ,SAAAL,GAChBA,EAAMM,iBACNC,IACGC,KAAK,QADR,eACsBb,IACnBb,MAAK,SAAA2B,GACJX,EAAUW,EAASC,MACnBd,EAAS,CACPL,KAAM,GACNC,MAAO,GACPC,QAAS,GACTC,QAAS,QAGZiB,OAAM,WACLb,EAAU,CACRM,SAAS,EACTV,QAAS,8CAqBb,UACE,eAACkB,EAAA,EAAKC,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,OACL1B,KAAK,OACLW,MAAOP,EAAMJ,KACb2B,YAAY,uBACZC,SAAUpB,OAGd,eAACa,EAAA,EAAKC,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,OACL1B,KAAK,QACLW,MAAOP,EAAMH,MACb0B,YAAY,mBACZC,SAAUpB,OAGd,eAACa,EAAA,EAAKC,MAAN,CAAYC,UAAU,UAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,sBACA,cAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,OACL1B,KAAK,UACLW,MAAOP,EAAMF,QACbyB,YAAY,gBACZC,SAAUpB,OAGd,eAACa,EAAA,EAAKC,MAAN,CAAYC,UAAU,UAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,sBACA,cAACH,EAAA,EAAKI,QAAN,CACEI,GAAG,WACH7B,KAAK,UACLW,MAAOP,EAAMD,QACb2B,KAAK,IACLH,YAAY,qBACZC,SAAUpB,OAGd,cAACuB,EAAA,EAAD,CAAQC,QAAQ,UAAUN,KAAK,SAA/B,2BCpFFO,G,kKACJ,WACE,OACE,qBAAKrB,UAAU,YAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,a,GANgBsB,IAAMC,YAuGhCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAsB1BpD,M","file":"static/js/main.6ead65c0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport './index.css';\r\n\r\nconst Header = () =>(\r\n    <header>\r\n        <h1>Enquiry Form</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst ContactForm = () => {\r\n  const [state, setState] = useState({\r\n    name: '',\r\n    email: '',\r\n    subject: '',\r\n    message: ''\r\n  });\r\n\r\n  const [result, setResult] = useState(null);\r\n\r\n  const sendEmail = event => {\r\n    event.preventDefault();\r\n    axios\r\n      .post('/send', { ...state })\r\n      .then(response => {\r\n        setResult(response.data);\r\n        setState({\r\n          name: '',\r\n          email: '',\r\n          subject: '',\r\n          message: ''\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setResult({\r\n          success: false,\r\n          message: 'Something went wrong. Try again later'\r\n        });\r\n      });\r\n  };\r\n\r\n  const onInputChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    setState({\r\n      ...state,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {result && (\r\n        <p className={`${result.success ? 'success' : 'error'}`}>\r\n          {result.message}\r\n        </p>\r\n      )}\r\n      <form onSubmit={sendEmail}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Full Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={state.name}\r\n            placeholder=\"Enter your full name\"\r\n            onChange={onInputChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"email\"\r\n            value={state.email}\r\n            placeholder=\"Enter your email\"\r\n            onChange={onInputChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"subject\">\r\n          <Form.Label>Subject</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"subject\"\r\n            value={state.subject}\r\n            placeholder=\"Enter subject\"\r\n            onChange={onInputChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"subject\">\r\n          <Form.Label>Message</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            name=\"message\"\r\n            value={state.message}\r\n            rows=\"3\"\r\n            placeholder=\"Enter your message\"\r\n            onChange={onInputChange}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Header from './Header';\nimport ContactForm from './ContactForm';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Applikacija extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"col-md-6 offset-md-3\">\n          <Header />\n          <ContactForm />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst gameSyles = {\n  backgroundColor: 'salmon',\n  margin: 10,\n  padding: 20\n};\nconst boardSyles = {\n  backgroundColor: 'skyblue',\n  margin: 10,\n  padding: 20\n};\nconst squareSyles = {\n  backgroundColor: 'gold',\n  margin: 10,\n  padding: 20\n};\n\nconst Square = (props) => {\n\n  const [value, setValue] = useState(null);\n\n\n  return (\n    <button className=\"square\"\n      onClick={props.onClickEvent}\n\n\n    >\n      {props.value}\n    </button>\n  );\n};\n\nconst Board = () => {\n\n  const initialSquares = Array(9).fill(null);\n  const [squares, setSquares] = useState(initialSquares);\n  const [xIsNext, setXIsNext] = useState(true);\n\n  const winner = calculateWiner(squares);\n\n\n  const status = winner ?\n  `Winner: ${winner}`:\n  `Next player: ${xIsNext ? 'X' : 'O'}`;\n\n\n  const renderSquare = (i) => {\n    return (\n      <Square value={squares[i]}\n        onClickEvent={() => handleClickEvent(i)}\n\n      />\n    );\n  };\n\n  const handleClickEvent = (i) => {\n    const newSquares = [...squares];\n\n    const winnerDeclared = Boolean(calculateWiner(newSquares));\n    const squareFilled = Boolean(newSquares[i]);\n    if(winnerDeclared || squareFilled){\n      return;\n    }\n    newSquares[i] = xIsNext ? 'X' : 'O';\n    setSquares(newSquares);\n    setXIsNext(!xIsNext);\n  };\n\n  return (\n    <div >\n      <div className=\"status\">{status}</div>\n\n      <div className=\"board-row\">\n        {renderSquare(0)}{renderSquare(1)}{renderSquare(2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3)}{renderSquare(4)}{renderSquare(5)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(6)}{renderSquare(7)}{renderSquare(8)}\n      </div>\n    </div>\n  );\n};\nconst Game = () => {\n  return (\n    <div className=\"game\">Tic-tac-toe<Board /></div>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Applikacija />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nfunction calculateWiner(squares) {\n  const lines = [\n    [0,1,2],[3, 4, 5], [6, 7, 8],\n    [0,3,6], [1,4,7], [2,5,8],\n    [0,4,8], [2,4,6]\n  ];\n\n  for (let line of lines){\n    const [a,b,c] = line;\n    if(squares[a] && squares[a] === squares[b] && squares[a]===squares[c]){\n      return squares[a];\n    }\n  }\n  return null;\n};\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}